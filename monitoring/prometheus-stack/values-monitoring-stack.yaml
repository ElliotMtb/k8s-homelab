---
grafana:
  admin:
    existingSecret: grafana-secrets
    userKey: admin-user
    passwordKey: admin-password
  # defaultDashboardsTimezone: "your timezone"
  # ingress:
  #   enabled: true
  #   ingressClassName: nginx
  #   annotations:
  #     # kubernetes.io/ingress.class: nginx
  #     # kubernetes.io/tls-acme: "true"
  #     nginx.ingress.kubernetes.io/ssl-redirect: "true"
  #     external-dns.alpha.kubernetes.io/hostname: "grafana.home.local"
  #     cert-manager.io/issuer-group: certmanager.step.sm
  #     cert-manager.io/issuer-kind: StepClusterIssuer
  #     cert-manager.io/issuer: step-cluster-issuer

  #   hosts:
  #     - grafana.home.local
  #   path: /

  #   ## TLS configuration for grafana Ingress
  #   ## Secret must be manually created in the namespace
  #   ##
  #   tls:
  #     - secretName: grafana.home.local-tls
  #       hosts:
  #         - grafana.home.local
prometheus:
  # ingress:
  #   enabled: true
  #   ingressClassName: nginx
  #   annotations:
  #     nginx.ingress.kubernetes.io/ssl-redirect: "true"
  #     external-dns.alpha.kubernetes.io/hostname: "prometheus.home.local"
  #     cert-manager.io/issuer-group: certmanager.step.sm
  #     cert-manager.io/issuer-kind: StepClusterIssuer
  #     cert-manager.io/issuer: step-cluster-issuer

  #   ## Redirect ingress to an additional defined port on the service
  #   # servicePort: 8081

  #   hosts:
  #     - prometheus.home.local

  #   ## Paths to use for ingress rules - one path should match the prometheusSpec.routePrefix
  #   ##
  #   paths:
  #     - /

  #   pathType: ImplementationSpecific
  #   tls:
  #     - secretName: prometheus.home.local-tls
  #       hosts:
  #         - prometheus.home.local

  # This is needed to scrape all data.  If left to default, it will only scrape data with the release in the label.
  prometheusSpec:
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false
    scrapeConfigSelectorNilUsesHelmValues: false